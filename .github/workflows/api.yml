name: Build, test and deploy
env:
  PROJECT: gcs_finance_api

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev, master]
    types: [closed]
  workflow_dispatch:

jobs:
  # build-and-push-image:
  #   # if: github.event_name == 'workflow_dispatch' || github.event.pull_request.merged == true
  #   runs-on: [ubuntu-latest]
  #   permissions:
  #     contents: read
  #     packages: write
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Login to GitHub Docker Registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Get STAGE
  #       id: get_stage
  #       run: |
  #         if [[ $BASE_REF == "master" || $REF == "refs/heads/master" ]]
  #         then
  #             echo "::set-output name=STAGE::prod"
  #         elif [[ $BASE_REF == "dev" || $REF == "refs/heads/dev" ]]
  #         then
  #             echo "::set-output name=STAGE::dev"
  #         else
  #             echo "Invalid branch" && exit 1
  #         fi
  #       env:
  #         REF: ${{ github.ref }}
  #         BASE_REF: ${{ github.base_ref }}

  #     - name: Build container image
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: api
  #         push: true
  #         tags: |
  #           ghcr.io/${{ github.repository }}/${{ env.PROJECT }}:${{ github.sha }}
  #           ghcr.io/${{ github.repository }}/${{ env.PROJECT }}:${{ steps.get_stage.outputs.STAGE }}

  deploy:
    # if: github.event_name == 'workflow_dispatch' || github.event.pull_request.merged == true
    runs-on: [ubuntu-latest]
    steps:
      # - uses: actions/checkout@v2

      - name: Configure SSH
        run: |
          eval $(ssh-agent -s)
          mkdir -p ~/.ssh/
          chmod 700 ~/.ssh/
          echo "$SSH_PRIVATE_KEY" >> ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-add ~/.ssh/id_ed25519
          cat >>~/.ssh/config <<END
          Host server
            HostName $SSH_HOST
            User $SSH_USER
            Port 2201
            IdentityFile ~/.ssh/id_ed25519
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}

      - name: Pull and run container
        run: |
          ssh server 'docker pull ghcr.io/${{ github.repository }}/${{ env.PROJECT }}'

      # - name: Check out the source
      #   run: ssh staging 'cd my-application && git fetch && git reset --hard origin/master'

      # - name: Start the server
      #   if: ${{ always() }}
      #   run: ssh staging 'sudo systemctl start my-application'
